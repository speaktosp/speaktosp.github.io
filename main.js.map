{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/log-form/log-form.component.css","webpack:///./src/app/components/log-form/log-form.component.html","webpack:///./src/app/components/log-form/log-form.component.ts","webpack:///./src/app/components/logs/logs.component.css","webpack:///./src/app/components/logs/logs.component.html","webpack:///./src/app/components/logs/logs.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/services/log.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <app-log-form></app-log-form>\\n  <app-logs></app-logs>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LogFormComponent } from './components/log-form/log-form.component';\nimport { LogsComponent } from './components/logs/logs.component';\nimport { LogService } from './services/log.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LogFormComponent,\n    LogsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [LogService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"card card-body mb-3\\\">\\n  <form (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"form-group\\\">\\n      <input type=\\\"text\\\" name=\\\"text\\\" [(ngModel)]=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Add a log...\\\">\\n    </div>\\n    <input type=\\\"submit\\\" value=\\\"Add Log\\\" class=\\\"btn btn-light\\\" [disabled]=\\\"!this.text\\\">\\n    <button (click)=\\\"clearState()\\\" type=\\\"button\\\" class=\\\"btn btn-warning\\\" [hidden]=!this.text>Clear</button>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { LogService } from '../../services/log.service';\n\nimport { Log } from '../../models/Log';\n\n@Component({\n  selector: 'app-log-form',\n  templateUrl: './log-form.component.html',\n  styleUrls: ['./log-form.component.css']\n})\nexport class LogFormComponent implements OnInit {\n  id: string;\n  text: string;\n  date: any;\n\n  isNew: boolean = true;\n\n  constructor(private logService: LogService) { }\n\n  ngOnInit() {\n    // Subscribe to the selectedLog observable\n    this.logService.selectedLog.subscribe(log => {\n      if(log.id !== null) {\n        this.isNew = false;\n        this.id = log.id;\n        this.text = log.text;\n        this.date = log.date;\n      }\n    });\n  }\n\n  onSubmit() {\n    // Check if new log\n    if(this.isNew) {\n      // Create a new log\n      const newLog = {\n        id: this.generateId(),\n        text: this.text,\n        date: new Date()\n      }\n      // Add log\n      this.logService.addLog(newLog);\n    } else {\n      // Create log to be updated\n      const updLog = {\n        id: this.id,\n        text: this.text,\n        date: new Date()\n      }\n      // Update log\n      this.logService.updateLog(updLog);\n    }\n\n    // Clear state\n    this.clearState();\n  }\n\n  clearState() {\n    this.isNew = true;\n    this.id = '';\n    this.text = '';\n    this.date = '';\n    this.logService.clearState();\n  }\n\n  generateId() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n}\n","module.exports = \".log-date {\\r\\n  color: #777;\\r\\n}\"","module.exports = \"<ul class=\\\"list-group\\\" *ngIf=\\\"loaded && logs.length > 0\\\">\\n  <li *ngFor=\\\"let log of logs\\\" [class.list-group-item-secondary]=\\\"selectedLog === log\\\" class=\\\"list-group-item d-flex justify-content-between align-items-center\\\">\\n    <a (click)=\\\"onSelect(log)\\\" href=\\\"#\\\">{{ log.text }}</a> \\n    <span class=\\\"log-date\\\">{{ log.date | date: 'short'}}</span>\\n    <i (click)=\\\"onDelete(log)\\\" class=\\\"fa fa-remove\\\"></i>\\n  </li>\\n</ul>\\n\\n<div *ngIf=\\\"loaded && logs.length == 0\\\">\\n  <h5>There are no logs in the system</h5>\\n</div>\\n\\n<div *ngIf=\\\"!loaded\\\">\\n  <h5>Loading...</h5>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { LogService } from '../../services/log.service';\n\nimport { Log } from '../../models/Log';\n\n@Component({\n  selector: 'app-logs',\n  templateUrl: './logs.component.html',\n  styleUrls: ['./logs.component.css']\n})\nexport class LogsComponent implements OnInit {\n  logs: Log[];\n  selectedLog: Log;\n  loaded: boolean = false;\n\n  constructor(private logService: LogService) { }\n\n  ngOnInit() {\n    this.logService.stateClear.subscribe(clear => {\n      if(clear) {\n        this.selectedLog = {id: '', text: '', date: ''};\n      }\n    });\n\n    this.logService.getLogs().subscribe(logs => {\n      this.logs = logs;\n      this.loaded = true;\n    });\n  }\n\n  onSelect(log: Log) {\n    this.logService.setFormLog(log);\n    this.selectedLog = log;\n  }\n\n  onDelete(log: Log) {\n    if(confirm('Are you sure?')){\n      this.logService.deleteLog(log);\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark mb-3\\\">\\n  <div class=\\\"container\\\">\\n    <a href=\\\"/\\\" class=\\\"navbar-brand\\\">DevLogger</a>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { Log } from '../models/Log';\nimport { Observable, Subject, asapScheduler, pipe, of, from, interval, merge, fromEvent } from 'rxjs';\n\nimport { BehaviorSubject } from 'rxjs'; \n \n\n@Injectable()\nexport class LogService {\n  logs: Log[];\n\n  private logSource = new BehaviorSubject<Log>({id: null, text: null, date: null});\n  selectedLog = this.logSource.asObservable();\n\n  private stateSource = new BehaviorSubject<boolean>(true);\n  stateClear = this.stateSource.asObservable();\n\n  constructor() { \n    // this.logs = [\n    //   {id: '1', text: 'Generated components', date: new Date('12/26/2017 12:54:23')},\n    //   {id: '2', text: 'Added Bootstrap', date: new Date('12/27/2017 9:33:13')},\n    //   {id: '3', text: 'Added logs component', date: new Date('12/27/2017 12:00:23')}\n    // ]\n\n    this.logs = [];\n  }\n\n  getLogs(): Observable<Log[]> {\n    if(localStorage.getItem('logs') === null) {\n      this.logs = [];\n    } else {\n      this.logs = JSON.parse(localStorage.getItem('logs'));\n    }\n\n    return of(this.logs.sort((a, b) => {\n      return b.date = a.date;\n    }));\n  }\n\n  setFormLog(log: Log) {\n    this.logSource.next(log);\n  }\n\n  addLog(log: Log) {\n    this.logs.unshift(log);\n\n    // Add to local storage\n    localStorage.setItem('logs', JSON.stringify(this.logs));\n  }\n\n  updateLog(log: Log) {\n    this.logs.forEach((cur, index) => {\n      if(log.id === cur.id) {\n        this.logs.splice(index, 1);\n      }\n    });\n    this.logs.unshift(log);\n\n    // Update local storage\n    localStorage.setItem('logs', JSON.stringify(this.logs));\n  }\n\n  deleteLog(log: Log) {\n    this.logs.forEach((cur, index) => {\n      if(log.id === cur.id) {\n        this.logs.splice(index, 1);\n      }\n    });\n\n    // Delete from local storage\n    localStorage.setItem('logs', JSON.stringify(this.logs));\n  }\n\n  clearState() {\n    this.stateSource.next(true);\n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}